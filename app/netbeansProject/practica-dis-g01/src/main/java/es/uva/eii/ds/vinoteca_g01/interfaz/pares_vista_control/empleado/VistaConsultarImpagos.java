package es.uva.eii.ds.vinoteca_g01.interfaz.pares_vista_control.empleado;


import es.uva.eii.ds.vinoteca_g01.negocio.modelos.Factura;
import es.uva.eii.ds.vinoteca_g01.negocio.modelos.Pedido;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


/**
 * Clase que implementa la vista del caso de uso de consultar impagos
 * 
 * @author ricalba
 * @author silmont
 * @author marrobl
 */
public class VistaConsultarImpagos extends javax.swing.JFrame {

    private CtrlVistaConsultarImpagos controlador;
    
    /**
     * Creates new form VistaConsultarImpagos
     */
    public VistaConsultarImpagos() {
        initComponents();
        errorLabel.setVisible(false);
        controlador = new CtrlVistaConsultarImpagos(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaFacturas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fechaTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        BuscarButton = new javax.swing.JButton();
        volverButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaFacturas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Factura", "Fecha Emision", "Pedido", "Abonado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaFacturas);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("CONSULTAR IMPAGOS");

        jLabel2.setText("Introduce una fecha para consultar facturas ");

        fechaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setText("(dd/mm/aaaa)");

        errorLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText("La fecha no puede estar vac√≠a");

        BuscarButton.setText("Buscar");
        BuscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarButtonActionPerformed(evt);
            }
        });

        volverButton.setText("Volver");
        volverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(fechaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(153, 153, 153)
                                    .addComponent(jLabel1)))
                            .addGap(32, 32, 32)
                            .addComponent(jLabel3))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(287, 287, 287)
                            .addComponent(errorLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(328, 328, 328)
                            .addComponent(BuscarButton))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(volverButton)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(fechaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BuscarButton)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(volverButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fechaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaTextFieldActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_fechaTextFieldActionPerformed

    private void BuscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarButtonActionPerformed
        controlador.procesaEventoIntroducirFecha();
    }//GEN-LAST:event_BuscarButtonActionPerformed

    private void volverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverButtonActionPerformed
        controlador.procesaEventoVolver();
    }//GEN-LAST:event_volverButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JTextField fechaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tablaFacturas;
    private javax.swing.JButton volverButton;
    // End of variables declaration//GEN-END:variables

    /**
     * Consulta la fecha introducida por el usuario
     * @return fecha 
     */
    public String getFecha() {
        return fechaTextField.getText();
    }

    /**
     * Muestra un mensaje de error al usuario
     * 
     * @param mensaje de error que se muestra 
     */
    public void mostrarMensajeError(String mensaje) {
        errorLabel.setText(mensaje);
        errorLabel.setVisible(true);
        errorLabel.setText(mensaje);
    }
    
    /**
     * Esconde el mensaje de error
     */
    public void esconderMensajeError() {
        errorLabel.setVisible(false);
    }

    /**
     * Muestra el mensaje al usuario de que no han pasado 30 dias
     * 
     * @param mensaje a mostrar
     */
    void mostrarAvisoNoVencido(String mensaje) {
        errorLabel.setText(mensaje);
        errorLabel.setVisible(true);
        errorLabel.setText(mensaje);
    }

    /**
     * Muestra el identificador y la fecha de emision de las facturas vencidas al usuario,
     * asi como el identificador de los pedidos y del abonado asociado a cada 
     * factura
     * 
     * @param facturas de las que se muestran los datos
     */
    void mostrarFacturasImpagos(ArrayList<Factura> facturas) {
       DefaultTableModel model = (DefaultTableModel) tablaFacturas.getModel();
        tablaFacturas.setAutoCreateRowSorter(true);
       ArrayList<Pedido> pedidos = new ArrayList<>();
       for(Factura f: facturas){
          pedidos = f.getPedidos();
          for(Pedido pedido : pedidos){
                     String numeroFactura = Integer.toString(pedido.getNumeroFactura());
                    String numeroPedido = Integer.toString(pedido.getNumero());
                    String numeroAbonado = Integer.toString(pedido.getNumeroAbonado());
                    String fechaFactura = f.getFechaEmision().toString();
                    model.addRow(new Object[]{numeroFactura, fechaFactura, numeroPedido, numeroAbonado});
                }
       }
    }
    
}
